---
export const prerender = false;

import { fetchProjects } from "../../functions/wordpress";

import Layout from "../../layouts/BaseLayout.astro";
import Content from "../../layouts/containers/BaseContent.astro";
import HeroProject from "../../components/sections/HeroProject.astro";
import GaleryLigthbox from "../../components/sections/GaleryLigthbox.svelte";

const data = await fetchProjects({
    query: `
    query projectPage {
        projects {
            nodes {
                slug
                title
                excerpt
                content
                featuredImage {
                    node {
                        sourceUrl(size: LARGE)
                    }
                }
                projectCategories {
                    nodes {
                        name
                    }
                }
                projectFeatures {
                    nodes {
                        name
                    }
                }
                projectLinks {
                    figmaUrl
                    githubUrl
                    urlDelSitioWeb
                }
                projectUsedTools(where: {orderby: TERM_ORDER}) {
                    nodes {
                        name
                    }
                }
                screenshots {
                    images {
                        ... on MediaItem {
                            id
                            sourceUrl(size: LARGE)
                            mediaItemUrl
                            altText
                        }
                    }
                }
            }
        }
    }
    `,
});

const { slug } = Astro.params;

const project = data.find((project) => project.slug === slug);
if (!project) return Astro.redirect("/404");
---

<Layout
    title={project.title + " - Portafolio de Michael Barrera"}
    pageTitle={project.title}
    pageDescription={project.excerpt}
>
    <HeroProject
        heading={project.title}
        description={project.excerpt}
        projectCategory={project.projectCategories.nodes.map((name) => {
            return name.name;
        })[0]}
        projectFeatureImg={project.featuredImage.node.sourceUrl}
        projectLink={project.projectLinks.urlDelSitioWeb}
    />
    <Content className="gap-10">
        <section
            class="flex flex-col md:flex-row gap-8 md:gap-16 p-3 md:p-6 lg:px-16"
        >
            <h2 class="w-[30%] flex-1 text-3xl font-medium">Descripción</h2>
            <article
                class="w-full md:w-[70%] prose-lg prose-headings:font-semibold prose-headings:text-pink-100 prose-p:text-pink-100/90 [&>figure>div>iframe]:w-full px-7 py-8 bg-pink rounded-xl"
            >
                <Fragment set:html={project.content} />
            </article>
        </section>
        <section
            class="flex flex-col md:flex-row gap-8 md:gap-16 p-6 py-8 lg:px-16"
        >
            <h2 class="w-[30%] flex-1 text-3xl font-medium">Características</h2>
            <div
                class="w-full h-fit md:w-[70%] columns-2 gap-12 px-7 pb-5 pt-4 bg-pink rounded-xl"
            >
                <h3 class="text-2xl text-pink-100 font-bold py-4 mb-1">
                    Features:
                </h3>
                <ul class="p-0 mb-0 list-none list divide-y divide-pink-200/10">
                    {
                        project.projectFeatures.nodes.map((tool) => {
                            return (
                                <li class="text-pink-100/90 text-lg font-medium m-0 py-4 pl-0">
                                    {tool.name}
                                </li>
                            );
                        })
                    }
                </ul>
                <h3 class="text-2xl text-pink-100 font-bold py-4 mb-1">
                    Stack:
                </h3>
                <ul class="p-0 mb-0 list-none list divide-y divide-pink-200/10">
                    {
                        project.projectUsedTools.nodes.map((tool) => {
                            return (
                                <li class="text-pink-100/90 text-lg font-medium m-0 py-4 pl-0">
                                    {tool.name}
                                </li>
                            );
                        })
                    }
                </ul>
            </div>
        </section>
        {
            project.screenshots.images ? (
                <section class="flex flex-col md:flex-row gap-8 md:gap-16 p-6 lg:px-16">
                    <h2 class="w-[30%] flex-1 text-3xl font-medium">
                        Screenshots
                    </h2>
                    <GaleryLigthbox
                        client:visible
                        images={project.screenshots.images}
                    />
                </section>
            ) : null
        }
    </Content>
</Layout>
