---
import { fetchProyects } from "../../functions/wordpress";

import Layout from "../../layouts/BaseLayout.astro";
import Content from "../../layouts/containers/BaseContent.astro";
import HeroProyect from "../../components/sections/HeroProyect.astro";
import GaleryLigthbox from "../../components/sections/GaleryLigthbox.svelte";

const data = await fetchProyects({
    query: `
    query proyectPage {
        proyects {
            nodes {
                slug
                title
                excerpt
                content
                featuredImage {
                    node {
                        mediaItemUrl
                    }
                }
                proyectCategories {
                    nodes {
                        name
                    }
                }
                proyectLinks {
                    figmaUrl
                    githubUrl
                    urlDelSitioWeb
                }
                proyectUsedTools {
                    nodes {
                        name
                    }
                }
                screenshots {
                    images {
                        ... on MediaItem {
                            id
                            sourceUrl(size: LARGE)
                            mediaItemUrl
                            altText
                        }
                    }
                }
            }
        }
    }
    `,
});

const { slug } = Astro.params;

const proyect = data.find((post) => post.slug === slug);
if (!proyect) return Astro.redirect("/404");

const {
    title,
    content,
    excerpt,
    proyectCategories,
    featuredImage,
    proyectLinks,
    screenshots,
} = proyect;
---

<Layout
    title={title + " - Portafolio de Michael Barrera"}
    pageTitle={title}
    pageDescription={excerpt}
>
    <HeroProyect
        heading={title}
        description={excerpt}
        proyectCategory={proyectCategories.nodes.map((name) => {
            return name.name;
        })[0]}
        proyectFeatureImg={featuredImage.node.mediaItemUrl}
        proyectLink={proyectLinks.urlDelSitioWeb}
    />
    <Content className="gap-10">
        <div class="flex flex-col md:flex-row gap-8 md:gap-16 p-6">
            <h2 class="w-[30%] flex-1 text-3xl font-medium">Caracter√≠sticas</h2>
            <div
                class="w-full md:w-[70%] prose-lg prose-headings:font-semibold prose-headings:text-pink-100 prose-p:text-pink-100/90 [&>figure>div>iframe]:w-full"
            >
                <Fragment set:html={content} />
            </div>
        </div>
        {
            screenshots.images ? (
                <div class="flex flex-col md:flex-row gap-8 md:gap-16 p-6">
                    <h2 class="w-[30%] flex-1 text-3xl font-medium">
                        Screenshots
                    </h2>
                    <GaleryLigthbox
                        client:visible
                        images={screenshots.images}
                    />
                </div>
            ) : null
        }
    </Content>
</Layout>
