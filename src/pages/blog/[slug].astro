---
export const prerender = false;

import { fetchPosts } from "../../functions/wordpress";
import { readingTime } from "../../utils/timeUtils";
import { dateFormat } from "../../utils/timeUtils";

import Layout from "../../layouts/BaseLayout.astro";
import Content from "../../layouts/containers/BaseContent.astro";
import IconClock from "../../components/icons/Clock.svelte";

const data = await fetchPosts({
    query: `
    query posts {
        posts {
            nodes {
                slug
                date
                title
                content
                excerpt
                categories {
                    nodes {
                        name
                    }
                }
                featuredImage {
                    node {
                        sourceUrl(size: LARGE)
                    }
                }    
            }
        }
    }
    `,
});

const { slug } = Astro.params;

const post = data.find((post) => post.slug === slug);
if (!post) return Astro.redirect("/404");

const { title, content, categories, date, excerpt, featuredImage } = post;
---

<style>
    #featureImg::after {
        content: "";
        position: absolute;
        top: 0;
        bottom: 0;
        left: 0;
        right: 0;
        background: radial-gradient(
            93.83% 89.71% at 36.36% 11.33%,
            rgba(26, 0, 13, 0.8) 0%,
            #1a000d 100%
        );
    }
</style>

<Layout title={title} pageTitle={title} pageDescription={excerpt}>
    <Content className="px-4 py-4">
        <section id="featureImg" class="absolute inset-0 h-[850px]">
            <img
                class="w-full h-[850px] object-cover inset-0"
                src={featuredImage?.node.sourceUrl}
                alt=""
                loading="lazy"
                decoding="async"
            />
        </section>

        <article
            class="w-full lg:w-[90%] flex flex-col gap-10 md:gap-16 z-10 md:p-6"
        >
            <header class="p-3 md:p-0">
                <div class="flex flex-row items-center gap-5 mb-5 md:mb-7">
                    <p class="text-xl md:text-2xl font-medium text-pink-200">
                        {
                            categories.nodes.map((names) => {
                                return names.name;
                            })
                        }
                    </p>
                    <span>/</span>
                    <time
                        datetime={date}
                        class="text-lg md:text-xl font-medium text-pink-200/70"
                    >
                        {dateFormat(date, "PP")}
                    </time>
                </div>
                <h1
                    class="flex-1 text-3xl lg:text-5xl font-medium text-pink-100 mb-6"
                >
                    {title}
                </h1>
                <p class="flex flex-row items-center gap-3 text-pink-200/90">
                    <IconClock width={16} className="fill-pink-200/90" />
                    {readingTime(content)}
                </p>
            </header>
            <main
                class="bg-pink prose-lg break-words prose-headings:font-semibold prose-headings:text-2xl md:prose-headings:text-3xl p-5 md:p-10 rounded-xl prose-headings:text-pink-100 prose-p:text-pink-100/90 prose-pre:bg-velvet prose-pre:overflow-auto [&>figure>div>iframe]:w-full"
            >
                <Fragment set:html={content} />
            </main>
        </article>
    </Content>
</Layout>
