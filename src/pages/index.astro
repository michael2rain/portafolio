---
import Layout from "../layouts/layout.astro";
import Content from "../layouts/containers/content.astro";
import Hero from "../components/sections/heroPrimary.astro";
import ProyectCard from "../components/cards/proyect.astro";
import PostCard from "../components/cards/post.astro";

import { formatDistanceStrict } from "date-fns";
import { es } from "date-fns/locale";

import { wpquery } from "../graphql/wordpress";

const data = await wpquery({
    query: `
    query recentPost {
        posts {
            nodes {
                slug
                date
                title
                excerpt
                content
                categories {
                    nodes {
                        name
                    }
                }
                featuredImage {
                    node {
                        sourceUrl(size: MEDIUM)
                    }
                }
            }
        }
    }
    `,
});

const dateFormat = (fecha) => {
    const fechaBase = new Date(fecha);
    const result = formatDistanceStrict(new Date(), fechaBase, { locale: es });
    return `Hace ${result}`;
};

const readingTime = (content) => {
    const wpm = 225;
    const words = content.trim().split(/\s+/).length;
    const time = Math.ceil(words / wpm);
    console.log(time);
    return time;
};
---

<Layout
    title="Información - Michael Barrera Developer"
    pageTitle="Información"
    pageDescription="Información de Michael Barrera; Acerca de, proyectos y últimos post en el blog."
>
    <Hero
        heading="Info"
        description="Entusiasta del código abierto, apasionado por el diseño de interfaces y la accesibilidad en la web."
    />
    <Content>
        <section
            class="flex flex-row flex-wrap justify-center md:justify-start gap-5 lg:gap-7 lg:gap-y-6 md:px-6 lg:px-12 xl:px-0 mb-10 lg:mb-14"
        >
            <h2
                class="w-full md:w-fit text-2xl md:text-3xl text-pink-50 font-medium pb-2"
            >
                Proyectos recientes
            </h2>
            <div
                class="flex flex-1 basis-2/4 lg:basis-2/3 justify-center md:justify-start items-center order-last md:order-none mt-3 md:mt-0"
            >
                <a
                    class="text-pink-200 hover:text-pink-100 underline-offset-2 decoration-dashed hover:underline"
                    href="/portafolio">Visitar portafolio</a
                >
            </div>
            <ProyectCard
                className="basis-auto lg:basis-[calc(50%_-_14px)]"
                proyectCat="WordPress Plugin"
                proyectName="WooCommerce AdCombo Integration"
                proyectDesc="Integración entre WooCommerce y la API de AdCombo, para crear pedidos y enviar la información del cliente en tiempo real."
            />
            <ProyectCard
                className="basis-auto lg:basis-[calc(50%_-_14px)]"
                proyectCat="E-commerce"
                proyectName="Naturista Express"
                proyectDesc="Tienda en línea con sincronización de pedidos vía API. Personalización de plantillas de Woocommerce como el carrito y checkout."
            />
        </section>
        <section
            class="flex flex-row flex-wrap gap-5 md:gap-7 items-center md:p-6 lg:px-12 xl:p-0"
        >
            <h2
                class="flex-0 text-2xl md:text-3xl text-pink-50 font-medium pb-2"
            >
                Publicaciones del blog
            </h2>
            <div
                class="flex flex-1 basis-2/4 justify-center md:justify-start items-center order-last md:order-none mt-3 md:mt-0"
            >
                <a
                    class="text-pink-200 hover:text-pink-100 underline-offset-2 decoration-dashed hover:underline"
                    href="#">Visitar blog</a
                >
            </div>
            <div class="w-full flex flex-col gap-5 md:gap-7">
                {
                    data.posts.nodes.map((post: any) => {
                        return (
                            <PostCard
                                postCat={
                                    post.categories.nodes.map((name) => {
                                        return name.name;
                                    })[0]
                                }
                                postDate={dateFormat(post.date)}
                                postTitle={post.title}
                                postExcerpt={post.excerpt}
                                postSlug={post.slug}
                                postLectureTime={readingTime(post.content)}
                                postImage={post.featuredImage?.node.sourceUrl}
                            />
                        );
                    })
                }
            </div>
        </section>
    </Content>
</Layout>
